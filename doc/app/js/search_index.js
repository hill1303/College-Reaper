var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","autocompletehelper","college","completion","completionscontroller","course","coursegroup","flashhelper","genschedulehelper","mockschedule","schedulegenerator","location","rgeo","person","preference","publiccontroller","requirementgroup","schedule","schedulescontroller","section","term","user","about()","acceptable_credit_hours?()","assign_class_section!()","autocompleted_course_to_id()","bias_param()","bias_slider()","cached_college()","cached_coordinates()","cached_course()","cached_courses()","cached_find()","cached_global_groups()","cached_non_global_groups()","cached_non_independent_groups()","cached_user()","calculate_distance()","configure_permitted_parameters()","contact()","contains_acceptable_time_range()","contains_course_conflict?()","contains_explicit_courses?()","contains_time_conflict?()","convert_and_clean_up_dates()","count_ge_courses()","count_major_courses()","course_safe?()","course_times_overlap?()","courses_for_autocomplete()","create()","credit_hour_score()","destroy()","display_flash_messages()","distance_score()","edit()","eql?()","evaluate!()","evaluate_population()","evolve_schedules()","exchange_genes!()","fill_schedule!()","filter_by_preferred_days()","flatten_courses()","flatten_exclusions()","flush_cache()","ge_major_score()","generate_permutations_of_schedules()","generate_schedules()","get_named_courses_from()","hash()","home()","index()","index()","is_full?()","is_valid?()","mutate!()","new()","new()","new_generation!()","next_term()","privacy()","purge_and_replace_invalid_schedules!()","reset!()","run_schedules()","safe_assignment?()","select_mate()","set_class_sections()","sexes()","share_day?()","show()","show()","sorted_classes_on()","sub_scores()","suffixes()","terms()","time_earlier_than_other_time()","time_later_than_other_time()","time_range_contains_other_time_range()","time_safe?()","time_score()","tips()","titles()","total_credit_hours_of()","total_distance_of()","unassign_class_section!()","update()","update()","gemfile","gemfile.lock","readme","rakefile","application.coffee","application.scss","autocomplete.scss","foundation_and_overrides.scss","application.css","application.js","index.html","404.html","422.html","500.html","favicon.ico","robots","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html","rich.html"],"longSearchIndex":["applicationcontroller","applicationhelper","autocompletehelper","college","completion","completionscontroller","course","coursegroup","flashhelper","genschedulehelper","genschedulehelper::mockschedule","genschedulehelper::schedulegenerator","location","location::rgeo","person","preference","publiccontroller","requirementgroup","schedule","schedulescontroller","section","term","user","publiccontroller#about()","genschedulehelper::mockschedule#acceptable_credit_hours?()","genschedulehelper::mockschedule#assign_class_section!()","applicationhelper#autocompleted_course_to_id()","schedulescontroller#bias_param()","applicationhelper#bias_slider()","coursegroup#cached_college()","section#cached_coordinates()","section#cached_course()","coursegroup#cached_courses()","course::cached_find()","college#cached_global_groups()","user#cached_non_global_groups()","user#cached_non_independent_groups()","preference#cached_user()","genschedulehelper::mockschedule#calculate_distance()","applicationcontroller#configure_permitted_parameters()","publiccontroller#contact()","genschedulehelper::mockschedule#contains_acceptable_time_range()","genschedulehelper::mockschedule#contains_course_conflict?()","genschedulehelper::mockschedule#contains_explicit_courses?()","genschedulehelper::mockschedule#contains_time_conflict?()","schedulescontroller#convert_and_clean_up_dates()","genschedulehelper::mockschedule#count_ge_courses()","genschedulehelper::mockschedule#count_major_courses()","genschedulehelper::mockschedule#course_safe?()","genschedulehelper::mockschedule#course_times_overlap?()","autocompletehelper#courses_for_autocomplete()","completionscontroller#create()","genschedulehelper::mockschedule#credit_hour_score()","completionscontroller#destroy()","flashhelper#display_flash_messages()","genschedulehelper::mockschedule#distance_score()","completionscontroller#edit()","genschedulehelper::mockschedule#eql?()","genschedulehelper::mockschedule#evaluate!()","genschedulehelper::schedulegenerator::evaluate_population()","genschedulehelper::schedulegenerator::evolve_schedules()","genschedulehelper::schedulegenerator::exchange_genes!()","genschedulehelper::mockschedule#fill_schedule!()","genschedulehelper::schedulegenerator::filter_by_preferred_days()","schedulescontroller#flatten_courses()","schedulescontroller#flatten_exclusions()","course#flush_cache()","genschedulehelper::mockschedule#ge_major_score()","genschedulehelper::schedulegenerator::generate_permutations_of_schedules()","genschedulehelper::schedulegenerator::generate_schedules()","genschedulehelper::mockschedule#get_named_courses_from()","genschedulehelper::mockschedule#hash()","publiccontroller#home()","completionscontroller#index()","schedulescontroller#index()","genschedulehelper::mockschedule#is_full?()","genschedulehelper::mockschedule#is_valid?()","genschedulehelper::schedulegenerator::mutate!()","completionscontroller#new()","genschedulehelper::mockschedule::new()","genschedulehelper::schedulegenerator::new_generation!()","applicationcontroller#next_term()","publiccontroller#privacy()","genschedulehelper::schedulegenerator::purge_and_replace_invalid_schedules!()","genschedulehelper::mockschedule#reset!()","schedulescontroller#run_schedules()","genschedulehelper::mockschedule#safe_assignment?()","genschedulehelper::schedulegenerator::select_mate()","genschedulehelper::mockschedule#set_class_sections()","person::sexes()","genschedulehelper::mockschedule#share_day?()","completionscontroller#show()","schedulescontroller#show()","genschedulehelper::mockschedule#sorted_classes_on()","genschedulehelper::mockschedule#sub_scores()","person::suffixes()","publiccontroller#terms()","genschedulehelper::mockschedule#time_earlier_than_other_time()","genschedulehelper::mockschedule#time_later_than_other_time()","genschedulehelper::mockschedule#time_range_contains_other_time_range()","genschedulehelper::mockschedule#time_safe?()","genschedulehelper::mockschedule#time_score()","schedulescontroller#tips()","person::titles()","genschedulehelper::mockschedule#total_credit_hours_of()","genschedulehelper::mockschedule#total_distance_of()","genschedulehelper::mockschedule#unassign_class_section!()","completionscontroller#update()","schedulescontroller#update()","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ApplicationController","","classes/ApplicationController.html","","<p>The ApplicationController is the superclass for all controllers in the\napplication and can be used to …\n"],["ApplicationHelper","","classes/ApplicationHelper.html","","<p>The ApplicationHelper module contains utility methods which are useful to\nmultiple portions of the application. …\n"],["AutocompleteHelper","","classes/AutocompleteHelper.html","","<p>The AutocompleteHelper module contains a method used to create a variable\nof all courses that can be …\n"],["College","","classes/College.html","","<p>The College class represents the entity college in a university (eg. the\nCollege of Engineering, College …\n"],["Completion","","classes/Completion.html","","<p>The Completion class represents a course which a student has taken,\nrelating a User and Course while …\n"],["CompletionsController","","classes/CompletionsController.html","","<p>The CompletionController is a basic RESTful controller that allow a\nlogged-in user to edit the completed …\n"],["Course","","classes/Course.html","","<p>The Course class provides information about an individual course. Each\ncourse is related to one or more …\n"],["CourseGroup","","classes/CourseGroup.html","","<p>The CourseGroup class holds a set of courses that are evaluated together\nand relate to a users major. …\n"],["FlashHelper","","classes/FlashHelper.html","","<p>Provides a helper method to simplify the display of flash messages and\nprovide the\nnecessary markup for ...\n"],["GenScheduleHelper","","classes/GenScheduleHelper.html","","<p>This module provides interfaces for generating schedule mock-ups using user\npreferences and a set of …\n"],["GenScheduleHelper::MockSchedule","","classes/GenScheduleHelper/MockSchedule.html","","<p>The MockSchedule class represents a simple mock-up of a Schedule&#39;s\ncontent for the purpose of generating …\n"],["GenScheduleHelper::ScheduleGenerator","","classes/GenScheduleHelper/ScheduleGenerator.html","","<p>This ScheduleGenerator class provides some general methods for generating\nsets of schedules based on …\n"],["Location","","classes/Location.html","","<p>The Location class represents the location of a building, storing both its\nstreet address and a spatial …\n"],["Location::RGeo","","classes/Location/RGeo.html","",""],["Person","","classes/Person.html","","<p>The Person class represents a real world person.\n<p>Attributes are stored as follows:\n<p><code>:name</code> stores the name …\n"],["Preference","","classes/Preference.html","","<p>The Preference class represents the preferences expressed by a user. These\ninclude importance of distance, …\n"],["PublicController","","classes/PublicController.html","","<p>The PublicController handles the information about the Webpage. It handles\ninfo about Home,\nAbout page, ...\n"],["RequirementGroup","","classes/RequirementGroup.html","","<p>The RequirementGroup class represents a set of Courses and associates a\ncompletion rule to that Course …\n"],["Schedule","","classes/Schedule.html","","<p>The Schedule class represents a possible schedule for the user. It will be\nscored based on a scheduling …\n"],["SchedulesController","","classes/SchedulesController.html","","<p>The SchedulesController handles requests for generating a new schedule, as\nwell as displaying the results …\n"],["Section","","classes/Section.html","","<p>The Section class represents a single section of a course that is offered\nby the College during a term. …\n"],["Term","","classes/Term.html","","<p>A Term represents a period of time in which a Course may be offered.\n<p>Attributes are stored as follows: …\n"],["User","","classes/User.html","","<p>The User class represents a user in the application, which is understood to\nmean a person seeking to …\n"],["about","PublicController","classes/PublicController.html#method-i-about","()","<p>Routes to the about page of the Website\n"],["acceptable_credit_hours?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-acceptable_credit_hours-3F","(preferences, class_section_set)","<p>Checks whether a class section set contains an acceptable credit hour total\n(acceptable meaning that …\n"],["assign_class_section!","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-assign_class_section-21","(class_section)","<p>Adds a class section to the class section set of <code>self</code>.\n<p>Returns:\n<p>The class section set of <code>self</code> if the class …\n"],["autocompleted_course_to_id","ApplicationHelper","classes/ApplicationHelper.html#method-i-autocompleted_course_to_id","(course_string)","<p>The autocompleted_course_to_id method takes a full course string as an\nargument which includes the instructional …\n"],["bias_param","SchedulesController","classes/SchedulesController.html#method-i-bias_param","(parameter, low, high)","<p>Adds the bias to the preferences\n"],["bias_slider","ApplicationHelper","classes/ApplicationHelper.html#method-i-bias_slider","(input)","<p>The bias_slider method takes as input the value set on a single slider by a\nuser, ranging from 0 to 1. …\n"],["cached_college","CourseGroup","classes/CourseGroup.html#method-i-cached_college","()","<p>Accessor for the associated College of a CourseGroup using the cache to\nlimit database queries\n<p>Returns: …\n"],["cached_coordinates","Section","classes/Section.html#method-i-cached_coordinates","()","<p>Gets the coordinates of the associated Location using the cache to limit\nfuture database queries\n<p>Returns: …\n"],["cached_course","Section","classes/Section.html#method-i-cached_course","()","<p>Accessor for the associated Course of a Section using the cache to limit\ndatabase queries\n<p>Returns:\n<p>Cached …\n"],["cached_courses","CourseGroup","classes/CourseGroup.html#method-i-cached_courses","()","<p>Accessor for the associated courses of a CourseGroup using the cache to\nlimit database queries\n<p>Returns: …\n"],["cached_find","Course","classes/Course.html#method-c-cached_find","(id)","<p>Finds and caches the resulting Course using the cache to limit future\ndatabase queries\n<p>Returns:\n<p>Cached …\n"],["cached_global_groups","College","classes/College.html#method-i-cached_global_groups","()","<p>Accessor for the associated CourseGroups of a College with the\n:college_global flag set using the cache …\n"],["cached_non_global_groups","User","classes/User.html#method-i-cached_non_global_groups","()","<p>Accessor for the associated CourseGroups of a User without the\n:college_global flag set using the cache …\n"],["cached_non_independent_groups","User","classes/User.html#method-i-cached_non_independent_groups","()","<p>Accessor for the associated CourseGroups of a User without the\n:college_independent flag set using the …\n"],["cached_user","Preference","classes/Preference.html#method-i-cached_user","()","<p>Accessor for the associated User of a Preference using the cache to limit\ndatabase queries\n<p>Returns:\n<p>Cached …\n"],["calculate_distance","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-calculate_distance","(location, other_location)","<p>Calculates the distance between two locations, based on Equirectangular\napproximation distance.\n<p>Returns: …\n"],["configure_permitted_parameters","ApplicationController","classes/ApplicationController.html#method-i-configure_permitted_parameters","()","<p>Add parameters to the list of allowed params on the appropriate Devise\ncontrollers in order to facilitate …\n"],["contact","PublicController","classes/PublicController.html#method-i-contact","()","<p>Routes to the contact page of the Website\n"],["contains_acceptable_time_range","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-contains_acceptable_time_range","(preferences, class_section_set)",""],["contains_course_conflict?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-contains_course_conflict-3F","(class_section_set)","<p>Checks whether a class section set contains any sections with duplicate\ncourse ids.\n<p>Returns:\n<p><code>true</code> if <code>class_section_set</code> …\n"],["contains_explicit_courses?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-contains_explicit_courses-3F","(preferences, class_section_set)","<p>Checks whether a class section set contains a subset consisting of the\nexplicitly named courses in user …\n"],["contains_time_conflict?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-contains_time_conflict-3F","(class_section_set)","<p>Checks whether a class section set contains any class sections whose times\noverlap.\n<p>Returns:\n<p><code>true</code> if <code>class_section_set</code> …\n"],["convert_and_clean_up_dates","SchedulesController","classes/SchedulesController.html#method-i-convert_and_clean_up_dates","(parameter)","<p>Converts dates into formats that can be used by the database\n"],["count_ge_courses","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-count_ge_courses","(preferences, class_section_set)","<p>Counts the number of courses in a class section setthat are considered a\ngeneral education course (that …\n"],["count_major_courses","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-count_major_courses","(preferences, class_section_set)","<p>Counts the number of courses in a class section setthat are considered a\nmajor course (that is, the course …\n"],["course_safe?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-course_safe-3F","(class_section_set, class_section)","<p>Checks whether adding a class section would cause a set to contain class\nsections belonging to the same …\n"],["course_times_overlap?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-course_times_overlap-3F","(class_section, other_class_section)","<p>Checks if two class sections belong to the same course.\n<p>Returns:\n<p><code>true</code> if the sections belong to the same …\n"],["courses_for_autocomplete","AutocompleteHelper","classes/AutocompleteHelper.html#method-i-courses_for_autocomplete","()","<p>The courses_for_autocomplete method is called in the\n<code>autocomplete.coffee.erb</code> file to obtain an array …\n"],["create","CompletionsController","classes/CompletionsController.html#method-i-create","()","<p>Allows user to construct a new Completion\n"],["credit_hour_score","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-credit_hour_score","(preferences, class_section_set)","<p>Assigns a score for the total number of credit hours in a class section set\nand how close that total …\n"],["destroy","CompletionsController","classes/CompletionsController.html#method-i-destroy","()","<p>Removes a completion from the database\n"],["display_flash_messages","FlashHelper","classes/FlashHelper.html#method-i-display_flash_messages","(keys = {})","<p>Returns the HTML for pretty display of the flash messages, either in full\nor for the categories specified. …\n"],["distance_score","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-distance_score","(class_section_set)","<p>Assigns a score for the approximate walking distance total of a class\nsection set. Section sets whose …\n"],["edit","CompletionsController","classes/CompletionsController.html#method-i-edit","()","<p>Allows a user to revise one of their completed course grades\n"],["eql?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-eql-3F","(other_schedule)","<p>Overrides Object&#39;s standard <code>eql?</code> method.\n<p>Returns:\n<p><code>true</code> if the set of class sections in <code>self</code> is\nequal …\n"],["evaluate!","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-evaluate-21","()","<p>Assigns a score of <code>self</code> based on how well +self fits\npreferences (specified by <code>preferences</code>) the following …\n"],["evaluate_population","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-evaluate_population","(preferences, schedule_set)","<p>Evaluates the overall fitness of a population as well as the fitness of the\nmost fit individual in a …\n"],["evolve_schedules","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-evolve_schedules","(preferences, class_section_set)","<p>Generates a set of somewhat optimal schedules from specified user\npreferences and a set of available …\n"],["exchange_genes!","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-exchange_genes-21","(schedule, other_schedule)","<p>Swaps a random number of class sections/genes from one schedule to another\nand vice versa. This is considered …\n"],["fill_schedule!","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-fill_schedule-21","(class_section_set)","<p>Fills <code>self</code> with class sections from a set of class sections. A\nfull MockSchedule is one with the number …\n"],["filter_by_preferred_days","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-filter_by_preferred_days","(preferences, class_section_set)","<p>Removes from class_section_set any sections which fall on a day included in\nthe user&#39;s exclude_day_pattern …\n"],["flatten_courses","SchedulesController","classes/SchedulesController.html#method-i-flatten_courses","()","<p>Formats courses\n"],["flatten_exclusions","SchedulesController","classes/SchedulesController.html#method-i-flatten_exclusions","()","<p>Formats Exclusions\n"],["flush_cache","Course","classes/Course.html#method-i-flush_cache","()","<p>Removes the designated Course from the cache when called, intended to be\ncalled by the <code>after_commit</code> action …\n"],["ge_major_score","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-ge_major_score","(preferences, class_section_set)","<p>Assigns a score for the number of courses that fall in a user specified\ncourse group category (either …\n"],["generate_permutations_of_schedules","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-generate_permutations_of_schedules","(preferences, class_section_set)","<p>Generates a set of schedules by way of permutation generation.\nNOTE: For\nlarge sets of class sections, ...\n"],["generate_schedules","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-generate_schedules","(preferences, class_section_set)","<p>Generates a limited set of random, valid schedules from a set of available\nclass sections. It is multithreaded, …\n"],["get_named_courses_from","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-get_named_courses_from","(preferences)","<p>Retrieves a set of courses explicitly named in user preferences.\n<p>Returns:\n<p>A set of courses explicitly named …\n"],["hash","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-hash","()","<p>Overrides Object&#39;s standard <code>hash</code> method.\n<p>Returns:\n<p>A <code>hash</code> representation of the class sections found …\n"],["home","PublicController","classes/PublicController.html#method-i-home","()","<p>Routes to the home page of the Website\n"],["index","CompletionsController","classes/CompletionsController.html#method-i-index","()","<p>Shows all of the completions for a given user\n"],["index","SchedulesController","classes/SchedulesController.html#method-i-index","()","<p>Routes to the home page for SchedulesController\n"],["is_full?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-is_full-3F","(preferences, class_section_set)","<p>Checks whether a class section set has the number of courses specified in\nthe user preferences.\n<p>Returns: …\n"],["is_valid?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-is_valid-3F","()","<p>Checks if <code>self</code> is a valid representation of a Schedule based\non <code>preferences</code>.\n<p>Returns:\n<p><code>true</code> if the following …\n"],["mutate!","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-mutate-21","(schedule, class_section_set)","<p>Randomly replaces class sections/genes in a schedule with class\nsections/genes from a pool of available …\n"],["new","CompletionsController","classes/CompletionsController.html#method-i-new","()","<p>Allows a user to add a completed course to their Completion List\n"],["new","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-c-new","(preferences)","<p>Initialize an empty MockSchedule with a set of user preferences.\n<p>Parameters:\n<p><code>preferences</code> - The <code>hstore</code> preferences …\n"],["new_generation!","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-new_generation-21","(schedule_set, class_section_set)","<p>Creates a new schedule set/population, using the following steps.\n * Select\na mate for an individual. ...\n"],["next_term","ApplicationController","classes/ApplicationController.html#method-i-next_term","()","<p>Gets the term with the first forthcoming start date\n<p>Returns:\n * A Term which is the next one to begin ...\n"],["privacy","PublicController","classes/PublicController.html#method-i-privacy","()","<p>Routes to the privacy page of the Website\n"],["purge_and_replace_invalid_schedules!","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-purge_and_replace_invalid_schedules-21","(schedule_set, class_section_set)","<p>Finds invalid schedules in a population and removes them, replacing them\nwith random and valid schedules. …\n"],["reset!","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-reset-21","(class_section_set)","<p>Resets <code>self</code>&#39;s class section set with a new, random, and\nfull class section set. Reset also evaluates …\n"],["run_schedules","SchedulesController","classes/SchedulesController.html#method-i-run_schedules","()","<p>Runs the schedules\n"],["safe_assignment?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-safe_assignment-3F","(class_section)","<p>Checks if <code>class_section</code> is able to be added to\n<code>self</code> based on the contents of <code>self</code>&#39;s class\nsection …\n"],["select_mate","GenScheduleHelper::ScheduleGenerator","classes/GenScheduleHelper/ScheduleGenerator.html#method-c-select_mate","(schedule, schedule_set)","<p>Selects the next most fit schedule or with some low probability, a random\nschedule from <code>schedule_set</code> …\n"],["set_class_sections","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-set_class_sections","(class_section_set)","<p>Replaces <code>self</code>&#39;s class section set with that of\n<code>class_section_set</code>. This does <em>not</em> guarantee that\n<code>self</code> …\n"],["sexes","Person","classes/Person.html#method-c-sexes","()","<p>Gets the set of sexes which are valid\n<p>Returns:\n<p>an array of sexes which will be accepted by the inclusion …\n"],["share_day?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-share_day-3F","(class_section, other_class_section)","<p>Checks whether two class sections occur on the same day.\n<p>Returns:\n<p><code>true</code> if <code>class_section</code> occurs on the same …\n"],["show","CompletionsController","classes/CompletionsController.html#method-i-show","()","<p>Displays a single completion to the user\n"],["show","SchedulesController","classes/SchedulesController.html#method-i-show","()","<p>Sets preferences for a user and displays the appropriate view\n"],["sorted_classes_on","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-sorted_classes_on","(day, class_section_set)","<p>Retrieves a sorted list of class sections (sorted by time) which occur on a\nparticular day.\n<p>Returns:\n<p>The …\n"],["sub_scores","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-sub_scores","()","<p>Gets all of the sub scores at once\n<p>Returns:\n * A hash of the sub scores of the schedule\n"],["suffixes","Person","classes/Person.html#method-c-suffixes","()","<p>Gets the set of words which are valid suffixes\n<p>Returns:\n<p>an array of suffixes which will be accepted by …\n"],["terms","PublicController","classes/PublicController.html#method-i-terms","()","<p>Routes to the terms page of the Website\n"],["time_earlier_than_other_time","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-time_earlier_than_other_time","(time, other_time)","<p>Checks if a time (from a time range) begins earlier than another time.\n<p>Returns:\n<p><code>true</code> if <code>time</code> occurs at …\n"],["time_later_than_other_time","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-time_later_than_other_time","(time, other_time)","<p>Checks if a time (from a time range) begins later than another time.\n<p>Returns:\n<p><code>true</code> if <code>time</code> occurs at the …\n"],["time_range_contains_other_time_range","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-time_range_contains_other_time_range","(start_time, end_time, other_start_time, other_end_time)","<p>Checks whether a time range (created from the first two parameters)\ncontains another time range\n"],["time_safe?","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-time_safe-3F","(class_section_set, class_section)","<p>Checks whether adding a class section would cause a time conflict with\nclass sections already present …\n"],["time_score","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-time_score","(preferences, class_section_set)","<p>Assigns a score for the timing of a class section set. Section sets whose\nsections time ranges fall within …\n"],["tips","SchedulesController","classes/SchedulesController.html#method-i-tips","()","<p>The <code>tips</code> method simply displays text to a user to remind them\nthat having less restrictions will allow …\n"],["titles","Person","classes/Person.html#method-c-titles","()","<p>Gets the set of words which are valid titles\n<p>Returns:\n<p>an array of titles which will be accepted by the …\n"],["total_credit_hours_of","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-total_credit_hours_of","(class_section_set)","<p>Totals the number of credit hours of the class sections in a class section\nset.\n<p>Returns:\n<p>The total number …\n"],["total_distance_of","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-total_distance_of","(sorted_class_sections_on_day)","<p>Calculates the total travel distance approximation between class sections\non a particular day.\n<p>Returns: …\n"],["unassign_class_section!","GenScheduleHelper::MockSchedule","classes/GenScheduleHelper/MockSchedule.html#method-i-unassign_class_section-21","(class_section)","<p>Removes a class section from the class section set of <code>self</code>.\n<p>Returns:\n<p>The class section set of <code>self</code> if the …\n"],["update","CompletionsController","classes/CompletionsController.html#method-i-update","()","<p>Allows user to renovate their Completion information\n"],["update","SchedulesController","classes/SchedulesController.html#method-i-update","()","<p>Updates the score of the algorithm if a user chooses to change their\npreferences\n"],["Gemfile","","files/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Travis CI requirement; probably not bad to have here anyway gem\n&#39;rake&#39; …\n"],["Gemfile.lock","","files/Gemfile_lock.html","","<p>GEM\n\n<pre><code>remote: https://rubygems.org/\nspecs:\n  actionmailer (4.1.4)\n    actionpack (= 4.1.4)\n    actionview ...</code></pre>\n"],["README","","files/README_md.html","","<p><img src=\"https://codeclimate.com/github/jimcavoli/College-Reaper.png\"> <img src=\"https://travis-ci.org/jimcavoli/College-Reaper.svg?branch=master\"> …\n"],["Rakefile","","files/Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["application.coffee","","files/app/assets/javascripts/application_coffee.html","","<p># This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["application.scss","","files/app/assets/stylesheets/application_scss.html","","\n<pre><code> This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\n ...</code></pre>\n"],["autocomplete.scss","","files/app/assets/stylesheets/autocomplete_scss.html","","<p>@import &#39;foundation_and_overrides&#39;;\n<p>.twitter-typeahead {\n\n<pre><code>width: 100%;</code></pre>\n"],["foundation_and_overrides.scss","","files/app/assets/stylesheets/foundation_and_overrides_scss.html","","<p>// Foundation by ZURB // foundation.zurb.com // Licensed under MIT Open\nSource\n<p>// // FOUNDATION SETTINGS …\n"],["application.css","","files/coverage/assets/0_8_0/application_css.html","","\n<pre><code>  -----------------------------------------------------------------------\n\nBlueprint CSS Framework 0.9 ...</code></pre>\n"],["application.js","","files/coverage/assets/0_8_0/application_js.html","","\n<pre><code>!\n jQuery JavaScript Library v1.6.2\n http://jquery.com/\n\n Copyright 2011, John Resig\n Dual licensed under ...</code></pre>\n"],["index.html","","files/coverage/index_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html xmlns=&#39;www.w3.org/1999/xhtml&#39;&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;title&gt;Code coverage ...</code></pre>\n"],["404.html","","files/public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</code></pre>\n"],["422.html","","files/public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</code></pre>\n"],["500.html","","files/public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre><code>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</code></pre>\n"],["favicon.ico","","files/public/favicon_ico.html","",""],["robots","","files/public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n<p>To ban all spiders …\n"],["rich.html","","files/tmp/letter_opener/1406740215_7eecef5/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406761693_b3d2111/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406762870_314004a/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406778115_faeb867/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406781242_20ebf9c/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406781537_97abc94/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406781656_8f7d41e/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406792474_65c6d56/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406809429_dff9563/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406811285_34a18d8/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406813841_e8f427b/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"],["rich.html","","files/tmp/letter_opener/1406816465_403ea6b/rich_html.html","","<p>&lt;html&gt;\n\n<pre><code>&lt;head&gt;\n  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n\n    &lt;title&gt;Confirmation ...</code></pre>\n"]]}}